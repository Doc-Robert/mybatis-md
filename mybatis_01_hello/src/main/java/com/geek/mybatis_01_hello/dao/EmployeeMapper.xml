<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geek.mybatis_01_hello.dao.EmployeeMapper">
<!--
    namespace： 名称空间 指定为接口的全类名
    id:标签的唯一标识符
    resultType：返回值类型
    #{id}：从传过来的参数中取出id
-->
    <select id="getEmpById" resultType="com.geek.mybatis_01_hello.domain.Employee">
        select id,last_name lastName,email,gender from mybatis_tb1 where id = #{id}
    </select>

<!--            public void addEmp(Employee employee)-->
<!--            parameterType :参数类型  可省略-->
<!--            获取自增主键的值：
                        mysql支持自增主键， 自增主键值得获取，mybatis 是利用statement.getGeneratedKey();
                        userGeneratedKeys="true"; 使用自增主键获取主键值策略
                        keyProperty：指定对应的主键属性，也就是mybatis 获取到主键值后，将这个值封装给javaBean的那个值
-->
        <insert id="addEmp" parameterType="com.geek.mybatis_01_hello.domain.Employee">
            insert into mybatis_tb1(last_name,email,gender)
            values(#{lastName},#{email},#{gender})
        </insert>

    <delete id="deleteEmp" parameterType="com.geek.mybatis_01_hello.domain.Employee" >
            delete
    </delete>

    <update id="updateEmp" parameterType="com.geek.mybatis_01_hello.domain.Employee">
        update mybatis_tb1
            set last_name=#{lastName},email=#{email},gender=#{gender}
            where id=#{id}
    </update>
</mapper>